import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Anton } from "next/font/google";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});
const areaFont = localFont({
  src: "./fonts/Area/Area-Regular.otf",
  variable: "--font-area",
});

const anton = Anton({
  weight: '400',
  subsets: ['latin'],
  variable: '--font-anton',
});

const als = localFont({
  src: "./fonts/ALS/alsscrp.ttf",
  variable: "--font-als",
});

const anth = localFont({
  src: "./fonts/Anth/anth-regular.ttf",
  variable: "--font-anth",
});

const circular = localFont({
  src: "./fonts/Circular/circular-medium.ttf",
  variable: "--font-circular",
});

const ivyHeadline = localFont({
  src: "./fonts/Ivy/ivy-presto-headline.otf",
  variable: "--font-ivy-headline",
});

const vvdsRashfield = localFont({
  src: "./fonts/VVDS/VVDS-Rashfield.ttf",
  variable: "--font-vvds-rashfield",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// CSS variables for fonts
const fontCSS = `
  :root {
    --font-ivypresto-regular: "ivypresto-display", serif;
    --font-ivypresto-regular-italic: "ivypresto-display", serif;
    --font-ivypresto-bold: "ivypresto-display", serif;
    --font-ivypresto-bold-italic: "ivypresto-display", serif;
    --font-cofo-gothic: "cofo-gothic-variable", sans-serif;
  }
`;

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link rel="stylesheet" href="https://use.typekit.net/jvc6qkn.css" />
        <style dangerouslySetInnerHTML={{ __html: fontCSS }} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${areaFont.variable} ${anton.variable} ${als.variable} ${anth.variable} ${circular.variable} ${ivyHeadline.variable} ${vvdsRashfield.variable} antialiased`}
        style={{ 
          fontFamily: '"overpass-mono-variable", sans-serif',
          fontVariationSettings: '"wght" 300'
        }}
      >
        {children}
      </body>
    </html>
  );
}
